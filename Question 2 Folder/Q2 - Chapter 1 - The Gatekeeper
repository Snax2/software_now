import os
import time
import requests
from PIL import Image
from io import BytesIO

# Generate a number (n)
current_time = int(time.time())
generated_number = (current_time % 100) + 50
if generated_number % 2 == 0:
    generated_number += 10
print(generated_number)

# Updated direct download link of the image from Google Drive
image_url = 'https://drive.google.com/uc?export=download&id=1V66TUr45RSOYQevYx1NM0bmXmAGvy5gc'

# Download the image from the web
response = requests.get(image_url)
image_data = BytesIO(response.content)

# Load the original image from the downloaded data
original_image = Image.open(image_data)

# Create a new image with the same size and mode
new_image = Image.new('RGB', original_image.size)

# Iterate over each pixel in the original image
for x in range(original_image.width):
    for y in range(original_image.height):
        # Get the original pixel values
        r, g, b = original_image.getpixel((x, y))

        # Update pixel values by adding the generated number
        new_r = r + generated_number
        new_g = g + generated_number
        new_b = b + generated_number

        # Set the updated pixel values in the new image
        new_image.putpixel((x, y), (new_r, new_g, new_b))

# Get the path to the Downloads folder
downloads_path = os.path.join(os.path.expanduser("~"), "Downloads")

# Save the new image in the Downloads folder
new_image.save(os.path.join(downloads_path, 'chapter1out2.png'))

# Calculate the sum of red pixel values in the new image
red_pixel_sum = sum([new_image.getpixel((x, y))[0] for x in range(new_image.width) for y in range(new_image.height)])

# Print the sum for moving to the next chapter
print("Sum of red pixel values:", red_pixel_sum)
