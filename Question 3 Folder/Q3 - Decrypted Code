global_variable = 100
my_dict = {'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}

def process_numbers(numbers):
    local_variable = 5 #removed unnecessary line of code as nothing in this funtion relates to the global variable
    numbers = [1, 2, 3, 4, 5]

    while local_variable > 0:
        if local_variable % 2 == 0:
            numbers.remove(local_variable)
        local_variable -= 1

    return numbers

my_set = {1, 2, 3, 4, 5, 5, 4, 3, 2, 1}
result = process_numbers(numbers=my_set)

def modify_dict():
    local_variable = 10
    my_dict['key4'] = local_variable

modify_dict() #removed positional argument

def update_global():
    global global_variable
    global_variable += 10

update_global() #need to add follow-up function for the this section to work

for i in range(5):
    i = i + 1 #this section needed to be reordered so it printed after the alteration to i and the expression altered as i isn't an independent variable
    print (i)

if my_set is not None and my_dict['key4'] == 10:
    print("Condition met!")

if 5 not in my_dict.values(): #added .values in order to get function to read the values within the dict
    print("5 not found in the dictionary") #fixed spelling mistake

print(global_variable)
print(my_dict)
print(my_set)
